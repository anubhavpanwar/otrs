.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Nexmo::SMS::Response 3pm"
.TH Nexmo::SMS::Response 3pm "2018-07-03" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Nexmo::SMS::Response \- Module that represents a response from Nexmo SMS API!
.SH "VERSION"
.IX Header "VERSION"
version 0.10
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This module represents a response from Nexmo.
.PP
.Vb 1
\&    use Nexmo::SMS::Response;
\&
\&    my $nexmo = Nexmo::SMS::Response\->new(
\&        json => \*(Aq{
\&            "message\-count":"1",
\&            "messages":[
\&              {
\&              "status":"4",
\&              "message\-id":"message001",
\&              "client\-ref":"Test001 \- Reference",
\&              "remaining\-balance":"20.0",
\&              "message\-price":"0.05",
\&              "error\-text":""
\&              }
\&            ]
\&        }\*(Aq,
\&    );
\&    
\&    for my $message ( $response ) {
\&        print $message\->status;
\&    }
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
create a new object
.PP
.Vb 10
\&    my $foo = Nexmo::SMS::Response\->new(
\&        json => \*(Aq{
\&            "message\-count":"1",
\&            "messages":[
\&              {
\&              "status":"4",
\&              "message\-id":"message001",
\&              "client\-ref":"Test001 \- Reference",
\&              "remaining\-balance":"20.0",
\&              "message\-price":"0.05",
\&              "error\-text":""
\&              }
\&            ]
\&        }\*(Aq,
\&    );
.Ve
.SS "messages"
.IX Subsection "messages"
returns the list of messages included in the response. Each element is an
object of Nexmo::SMS::Response::Message.
.PP
.Vb 1
\&    my @messages = $response\->messages;
.Ve
.SS "errstr"
.IX Subsection "errstr"
return the \*(L"last\*(R" error as string.
.PP
.Vb 1
\&    print $response\->errstr;
.Ve
.SS "is_success"
.IX Subsection "is_success"
returns 1 if all messages have a status = 0, \f(CW\*(C`undef\*(C'\fR otherwise.
.SS "is_error"
.IX Subsection "is_error"
Returns 1 if an error occured, 0 otherwise...
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
These attributes are available for \f(CW\*(C`Nexmo::SMS::TextMessage\*(C'\fR objects:
.PP
.Vb 2
\&  $nexmo\->status( \*(Aqstatus\*(Aq );
\&  my $status = $nexmo\->status;
.Ve
.IP "\(bu" 4
json
.IP "\(bu" 4
message_count
.IP "\(bu" 4
status
.SH "AUTHOR"
.IX Header "AUTHOR"
Renee Baecker <reneeb@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2016 by Renee Baecker.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
